//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../runtime/src/main/java/ru/korinc/runtime/network/HttpCallback.java
//

#include "HttpCallback.h"
#include "HttpResponse.h"
#include "J2ObjC_source.h"
#include "java/lang/Throwable.h"

@implementation RuKorincRuntimeNetworkHttpCallback

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RuKorincRuntimeNetworkHttpCallback_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)onResponceWithRuKorincRuntimeNetworkHttpResponse:(RuKorincRuntimeNetworkHttpResponse *)response {
}

- (void)onFailureWithJavaLangThrowable:(JavaLangThrowable *)throwable {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(onResponceWithRuKorincRuntimeNetworkHttpResponse:);
  methods[2].selector = @selector(onFailureWithJavaLangThrowable:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onResponce", "LRuKorincRuntimeNetworkHttpResponse;", "onFailure", "LJavaLangThrowable;" };
  static const J2ObjcClassInfo _RuKorincRuntimeNetworkHttpCallback = { "HttpCallback", "ru.korinc.runtime.network", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_RuKorincRuntimeNetworkHttpCallback;
}

@end

void RuKorincRuntimeNetworkHttpCallback_init(RuKorincRuntimeNetworkHttpCallback *self) {
  NSObject_init(self);
}

RuKorincRuntimeNetworkHttpCallback *new_RuKorincRuntimeNetworkHttpCallback_init() {
  J2OBJC_NEW_IMPL(RuKorincRuntimeNetworkHttpCallback, init)
}

RuKorincRuntimeNetworkHttpCallback *create_RuKorincRuntimeNetworkHttpCallback_init() {
  J2OBJC_CREATE_IMPL(RuKorincRuntimeNetworkHttpCallback, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RuKorincRuntimeNetworkHttpCallback)
