//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../core/src/main/java/ru/korinc/runtime/rx/ObservableWrapper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ObservableWrapper")
#ifdef RESTRICT_ObservableWrapper
#define INCLUDE_ALL_ObservableWrapper 0
#else
#define INCLUDE_ALL_ObservableWrapper 1
#endif
#undef RESTRICT_ObservableWrapper

#if !defined (RuKorincRuntimeRxObservableWrapper_) && (INCLUDE_ALL_ObservableWrapper || defined(INCLUDE_RuKorincRuntimeRxObservableWrapper))
#define RuKorincRuntimeRxObservableWrapper_

@protocol RuKorincRuntimeRxBackgroundSchedulerWrapper;
@protocol RuKorincRuntimeRxConsumer;
@protocol RuKorincRuntimeRxDisposableWrapper;
@protocol RuKorincRuntimeRxFunction;

@protocol RuKorincRuntimeRxObservableWrapper < JavaObject >

- (id<RuKorincRuntimeRxObservableWrapper>)observeOnMain;

- (id<RuKorincRuntimeRxObservableWrapper>)observeOnWithScheduler:(id<RuKorincRuntimeRxBackgroundSchedulerWrapper>)scheduler;

- (id<RuKorincRuntimeRxObservableWrapper>)subscribeOnWithScheduler:(id<RuKorincRuntimeRxBackgroundSchedulerWrapper>)scheduler;

- (id<RuKorincRuntimeRxDisposableWrapper>)subscribeWithConsumer:(id<RuKorincRuntimeRxConsumer>)consumer;

- (id<RuKorincRuntimeRxObservableWrapper>)mapWithFunc:(id<RuKorincRuntimeRxFunction>)func1;

- (id<RuKorincRuntimeRxObservableWrapper>)flatMapWithFunc:(id<RuKorincRuntimeRxFunction>)mapper;

- (id<RuKorincRuntimeRxObservableWrapper>)throttleLastWithWindowMillis:(jlong)windowMillis;

- (id<RuKorincRuntimeRxObservableWrapper>)delayWithWindowMillis:(jlong)millis;

- (id<RuKorincRuntimeRxObservableWrapper>)timerWithWindowMillis:(jlong)millis;

- (id<RuKorincRuntimeRxObservableWrapper>)retryWhenWithWindowMillis:(id<RuKorincRuntimeRxFunction>)handler;

- (id<RuKorincRuntimeRxObservableWrapper>)switchOnNextWithSources:(id<RuKorincRuntimeRxObservableWrapper>)sources;

@end

J2OBJC_EMPTY_STATIC_INIT(RuKorincRuntimeRxObservableWrapper)

J2OBJC_TYPE_LITERAL_HEADER(RuKorincRuntimeRxObservableWrapper)

#endif

#pragma pop_macro("INCLUDE_ALL_ObservableWrapper")
