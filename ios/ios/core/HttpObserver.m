//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../runtime/src/main/java/ru/korinc/runtime/network/HttpObserver.java
//

#include "Emitter.h"
#include "Function.h"
#include "HttpCallback.h"
#include "HttpExecutor.h"
#include "HttpObserver.h"
#include "HttpProvider.h"
#include "HttpResponse.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "LogProvider.h"
#include "ObservableOnSubscribe.h"
#include "ObservableWrapper.h"
#include "RuntimeConfiguration.h"
#include "RxProvider.h"
#include "java/lang/Exception.h"
#include "java/lang/Throwable.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface RuKorincRuntimeNetworkHttpObserver_$Lambda$1 : NSObject < RuKorincRuntimeRxObservableOnSubscribe > {
 @public
  NSString *val$url_;
  IOSObjectArray *val$headers_;
}

- (void)subscribeWithRuKorincRuntimeRxEmitter:(id<RuKorincRuntimeRxEmitter>)e;

@end

J2OBJC_EMPTY_STATIC_INIT(RuKorincRuntimeNetworkHttpObserver_$Lambda$1)

__attribute__((unused)) static void RuKorincRuntimeNetworkHttpObserver_$Lambda$1_initWithNSString_withNSStringArray_(RuKorincRuntimeNetworkHttpObserver_$Lambda$1 *self, NSString *capture$0, IOSObjectArray *capture$1);

__attribute__((unused)) static RuKorincRuntimeNetworkHttpObserver_$Lambda$1 *new_RuKorincRuntimeNetworkHttpObserver_$Lambda$1_initWithNSString_withNSStringArray_(NSString *capture$0, IOSObjectArray *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RuKorincRuntimeNetworkHttpObserver_$Lambda$1 *create_RuKorincRuntimeNetworkHttpObserver_$Lambda$1_initWithNSString_withNSStringArray_(NSString *capture$0, IOSObjectArray *capture$1);

@interface RuKorincRuntimeNetworkHttpObserver_1 : RuKorincRuntimeNetworkHttpCallback {
 @public
  NSString *val$url_;
  id<RuKorincRuntimeRxEmitter> val$e_;
}

- (instancetype)initWithNSString:(NSString *)capture$0
    withRuKorincRuntimeRxEmitter:(id<RuKorincRuntimeRxEmitter>)capture$1;

- (void)onResponceWithRuKorincRuntimeNetworkHttpResponse:(RuKorincRuntimeNetworkHttpResponse *)response;

- (void)onFailureWithJavaLangThrowable:(JavaLangThrowable *)throwable;

@end

J2OBJC_EMPTY_STATIC_INIT(RuKorincRuntimeNetworkHttpObserver_1)

__attribute__((unused)) static void RuKorincRuntimeNetworkHttpObserver_1_initWithNSString_withRuKorincRuntimeRxEmitter_(RuKorincRuntimeNetworkHttpObserver_1 *self, NSString *capture$0, id<RuKorincRuntimeRxEmitter> capture$1);

__attribute__((unused)) static RuKorincRuntimeNetworkHttpObserver_1 *new_RuKorincRuntimeNetworkHttpObserver_1_initWithNSString_withRuKorincRuntimeRxEmitter_(NSString *capture$0, id<RuKorincRuntimeRxEmitter> capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RuKorincRuntimeNetworkHttpObserver_1 *create_RuKorincRuntimeNetworkHttpObserver_1_initWithNSString_withRuKorincRuntimeRxEmitter_(NSString *capture$0, id<RuKorincRuntimeRxEmitter> capture$1);

@interface RuKorincRuntimeNetworkHttpObserver_$Lambda$3 : NSObject < RuKorincRuntimeRxFunction > {
 @public
  id<RuKorincRuntimeRxObservableWrapper> val$throwableObservableWrapper_;
}

- (id)applyWithId:(JavaLangThrowable *)t;

@end

J2OBJC_EMPTY_STATIC_INIT(RuKorincRuntimeNetworkHttpObserver_$Lambda$3)

__attribute__((unused)) static void RuKorincRuntimeNetworkHttpObserver_$Lambda$3_initWithRuKorincRuntimeRxObservableWrapper_(RuKorincRuntimeNetworkHttpObserver_$Lambda$3 *self, id<RuKorincRuntimeRxObservableWrapper> capture$0);

__attribute__((unused)) static RuKorincRuntimeNetworkHttpObserver_$Lambda$3 *new_RuKorincRuntimeNetworkHttpObserver_$Lambda$3_initWithRuKorincRuntimeRxObservableWrapper_(id<RuKorincRuntimeRxObservableWrapper> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RuKorincRuntimeNetworkHttpObserver_$Lambda$3 *create_RuKorincRuntimeNetworkHttpObserver_$Lambda$3_initWithRuKorincRuntimeRxObservableWrapper_(id<RuKorincRuntimeRxObservableWrapper> capture$0);

@interface RuKorincRuntimeNetworkHttpObserver_$Lambda$2 : NSObject < RuKorincRuntimeRxFunction >

- (id)applyWithId:(id<RuKorincRuntimeRxObservableWrapper>)throwableObservableWrapper;

@end

J2OBJC_STATIC_INIT(RuKorincRuntimeNetworkHttpObserver_$Lambda$2)

inline RuKorincRuntimeNetworkHttpObserver_$Lambda$2 *RuKorincRuntimeNetworkHttpObserver_$Lambda$2_get_instance();
static RuKorincRuntimeNetworkHttpObserver_$Lambda$2 *RuKorincRuntimeNetworkHttpObserver_$Lambda$2_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RuKorincRuntimeNetworkHttpObserver_$Lambda$2, instance, RuKorincRuntimeNetworkHttpObserver_$Lambda$2 *)

__attribute__((unused)) static void RuKorincRuntimeNetworkHttpObserver_$Lambda$2_init(RuKorincRuntimeNetworkHttpObserver_$Lambda$2 *self);

__attribute__((unused)) static RuKorincRuntimeNetworkHttpObserver_$Lambda$2 *new_RuKorincRuntimeNetworkHttpObserver_$Lambda$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RuKorincRuntimeNetworkHttpObserver_$Lambda$2 *create_RuKorincRuntimeNetworkHttpObserver_$Lambda$2_init();

@interface RuKorincRuntimeNetworkHttpObserver_$Lambda$4 : NSObject < RuKorincRuntimeRxObservableOnSubscribe > {
 @public
  NSString *val$url_;
  NSString *val$data_;
  IOSObjectArray *val$headers_;
}

- (void)subscribeWithRuKorincRuntimeRxEmitter:(id<RuKorincRuntimeRxEmitter>)e;

@end

J2OBJC_EMPTY_STATIC_INIT(RuKorincRuntimeNetworkHttpObserver_$Lambda$4)

__attribute__((unused)) static void RuKorincRuntimeNetworkHttpObserver_$Lambda$4_initWithNSString_withNSString_withNSStringArray_(RuKorincRuntimeNetworkHttpObserver_$Lambda$4 *self, NSString *capture$0, NSString *capture$1, IOSObjectArray *capture$2);

__attribute__((unused)) static RuKorincRuntimeNetworkHttpObserver_$Lambda$4 *new_RuKorincRuntimeNetworkHttpObserver_$Lambda$4_initWithNSString_withNSString_withNSStringArray_(NSString *capture$0, NSString *capture$1, IOSObjectArray *capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static RuKorincRuntimeNetworkHttpObserver_$Lambda$4 *create_RuKorincRuntimeNetworkHttpObserver_$Lambda$4_initWithNSString_withNSString_withNSStringArray_(NSString *capture$0, NSString *capture$1, IOSObjectArray *capture$2);

@interface RuKorincRuntimeNetworkHttpObserver_2 : RuKorincRuntimeNetworkHttpCallback {
 @public
  id<RuKorincRuntimeRxEmitter> val$e_;
  NSString *val$url_;
}

- (instancetype)initWithRuKorincRuntimeRxEmitter:(id<RuKorincRuntimeRxEmitter>)capture$0
                                    withNSString:(NSString *)capture$1;

- (void)onResponceWithRuKorincRuntimeNetworkHttpResponse:(RuKorincRuntimeNetworkHttpResponse *)response;

- (void)onFailureWithJavaLangThrowable:(JavaLangThrowable *)throwable;

@end

J2OBJC_EMPTY_STATIC_INIT(RuKorincRuntimeNetworkHttpObserver_2)

__attribute__((unused)) static void RuKorincRuntimeNetworkHttpObserver_2_initWithRuKorincRuntimeRxEmitter_withNSString_(RuKorincRuntimeNetworkHttpObserver_2 *self, id<RuKorincRuntimeRxEmitter> capture$0, NSString *capture$1);

__attribute__((unused)) static RuKorincRuntimeNetworkHttpObserver_2 *new_RuKorincRuntimeNetworkHttpObserver_2_initWithRuKorincRuntimeRxEmitter_withNSString_(id<RuKorincRuntimeRxEmitter> capture$0, NSString *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RuKorincRuntimeNetworkHttpObserver_2 *create_RuKorincRuntimeNetworkHttpObserver_2_initWithRuKorincRuntimeRxEmitter_withNSString_(id<RuKorincRuntimeRxEmitter> capture$0, NSString *capture$1);

@interface RuKorincRuntimeNetworkHttpObserver_$Lambda$5 : NSObject < RuKorincRuntimeRxFunction >

- (id)applyWithId:(id<RuKorincRuntimeRxObservableWrapper>)throwableObservableWrapper;

@end

J2OBJC_STATIC_INIT(RuKorincRuntimeNetworkHttpObserver_$Lambda$5)

inline RuKorincRuntimeNetworkHttpObserver_$Lambda$5 *RuKorincRuntimeNetworkHttpObserver_$Lambda$5_get_instance();
static RuKorincRuntimeNetworkHttpObserver_$Lambda$5 *RuKorincRuntimeNetworkHttpObserver_$Lambda$5_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RuKorincRuntimeNetworkHttpObserver_$Lambda$5, instance, RuKorincRuntimeNetworkHttpObserver_$Lambda$5 *)

__attribute__((unused)) static void RuKorincRuntimeNetworkHttpObserver_$Lambda$5_init(RuKorincRuntimeNetworkHttpObserver_$Lambda$5 *self);

__attribute__((unused)) static RuKorincRuntimeNetworkHttpObserver_$Lambda$5 *new_RuKorincRuntimeNetworkHttpObserver_$Lambda$5_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RuKorincRuntimeNetworkHttpObserver_$Lambda$5 *create_RuKorincRuntimeNetworkHttpObserver_$Lambda$5_init();

@implementation RuKorincRuntimeNetworkHttpObserver

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RuKorincRuntimeNetworkHttpObserver_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (id<RuKorincRuntimeRxObservableWrapper>)getWithNSString:(NSString *)url
                                        withNSStringArray:(IOSObjectArray *)headers {
  return RuKorincRuntimeNetworkHttpObserver_getWithNSString_withNSStringArray_(url, headers);
}

+ (id<RuKorincRuntimeRxObservableWrapper>)putWithNSString:(NSString *)url
                                             withNSString:(NSString *)data
                                        withNSStringArray:(IOSObjectArray *)headers {
  return RuKorincRuntimeNetworkHttpObserver_putWithNSString_withNSString_withNSStringArray_(url, data, headers);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRuKorincRuntimeRxObservableWrapper;", 0x89, 0, 1, -1, 2, -1, -1 },
    { NULL, "LRuKorincRuntimeRxObservableWrapper;", 0x89, 3, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getWithNSString:withNSStringArray:);
  methods[2].selector = @selector(putWithNSString:withNSString:withNSStringArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "get", "LNSString;[LNSString;", "(Ljava/lang/String;[Ljava/lang/String;)Lru/korinc/runtime/rx/ObservableWrapper<Lru/korinc/runtime/network/HttpResponse;>;", "put", "LNSString;LNSString;[LNSString;", "(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lru/korinc/runtime/rx/ObservableWrapper<Lru/korinc/runtime/network/HttpResponse;>;" };
  static const J2ObjcClassInfo _RuKorincRuntimeNetworkHttpObserver = { "HttpObserver", "ru.korinc.runtime.network", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_RuKorincRuntimeNetworkHttpObserver;
}

@end

void RuKorincRuntimeNetworkHttpObserver_init(RuKorincRuntimeNetworkHttpObserver *self) {
  NSObject_init(self);
}

RuKorincRuntimeNetworkHttpObserver *new_RuKorincRuntimeNetworkHttpObserver_init() {
  J2OBJC_NEW_IMPL(RuKorincRuntimeNetworkHttpObserver, init)
}

RuKorincRuntimeNetworkHttpObserver *create_RuKorincRuntimeNetworkHttpObserver_init() {
  J2OBJC_CREATE_IMPL(RuKorincRuntimeNetworkHttpObserver, init)
}

id<RuKorincRuntimeRxObservableWrapper> RuKorincRuntimeNetworkHttpObserver_getWithNSString_withNSStringArray_(NSString *url, IOSObjectArray *headers) {
  RuKorincRuntimeNetworkHttpObserver_initialize();
  return [((id<RuKorincRuntimeRxObservableWrapper>) nil_chk([((id<RuKorincRuntimeRxRxProvider>) nil_chk(JreLoadStatic(RuKorincRuntimeRuntimeConfiguration, rxProvider))) observableCreateWithSource:new_RuKorincRuntimeNetworkHttpObserver_$Lambda$1_initWithNSString_withNSStringArray_(url, headers)])) retryWhenWithWindowMillis:JreLoadStatic(RuKorincRuntimeNetworkHttpObserver_$Lambda$2, instance)];
}

id<RuKorincRuntimeRxObservableWrapper> RuKorincRuntimeNetworkHttpObserver_putWithNSString_withNSString_withNSStringArray_(NSString *url, NSString *data, IOSObjectArray *headers) {
  RuKorincRuntimeNetworkHttpObserver_initialize();
  return [((id<RuKorincRuntimeRxObservableWrapper>) nil_chk([((id<RuKorincRuntimeRxRxProvider>) nil_chk(JreLoadStatic(RuKorincRuntimeRuntimeConfiguration, rxProvider))) observableCreateWithSource:new_RuKorincRuntimeNetworkHttpObserver_$Lambda$4_initWithNSString_withNSString_withNSStringArray_(url, data, headers)])) retryWhenWithWindowMillis:JreLoadStatic(RuKorincRuntimeNetworkHttpObserver_$Lambda$5, instance)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RuKorincRuntimeNetworkHttpObserver)

@implementation RuKorincRuntimeNetworkHttpObserver_$Lambda$1

- (void)subscribeWithRuKorincRuntimeRxEmitter:(id<RuKorincRuntimeRxEmitter>)e {
  @try {
    [((id<RuKorincRuntimeLoggingLogProvider>) nil_chk(JreLoadStatic(RuKorincRuntimeRuntimeConfiguration, log))) dWithNSString:@"HttpObserver" withNSString:JreStrcat("$$C@", @"try get: ", val$url_, ' ', val$headers_)];
    [((id<RuKorincRuntimeNetworkHttpExecutor>) nil_chk([((id<RuKorincRuntimeNetworkHttpProvider>) nil_chk(JreLoadStatic(RuKorincRuntimeRuntimeConfiguration, http))) getExecutor])) getMethodWithUrl:val$url_ WithHeaders:val$headers_ WithCallback:new_RuKorincRuntimeNetworkHttpObserver_1_initWithNSString_withRuKorincRuntimeRxEmitter_(val$url_, e)];
  }
  @catch (JavaLangException *ex) {
    [((id<RuKorincRuntimeLoggingLogProvider>) nil_chk(JreLoadStatic(RuKorincRuntimeRuntimeConfiguration, log))) eWithJavaLangThrowable:ex];
    [((id<RuKorincRuntimeRxEmitter>) nil_chk(e)) onErrorWithJavaLangThrowable:ex];
  }
}

@end

void RuKorincRuntimeNetworkHttpObserver_$Lambda$1_initWithNSString_withNSStringArray_(RuKorincRuntimeNetworkHttpObserver_$Lambda$1 *self, NSString *capture$0, IOSObjectArray *capture$1) {
  self->val$url_ = capture$0;
  self->val$headers_ = capture$1;
  NSObject_init(self);
}

RuKorincRuntimeNetworkHttpObserver_$Lambda$1 *new_RuKorincRuntimeNetworkHttpObserver_$Lambda$1_initWithNSString_withNSStringArray_(NSString *capture$0, IOSObjectArray *capture$1) {
  J2OBJC_NEW_IMPL(RuKorincRuntimeNetworkHttpObserver_$Lambda$1, initWithNSString_withNSStringArray_, capture$0, capture$1)
}

RuKorincRuntimeNetworkHttpObserver_$Lambda$1 *create_RuKorincRuntimeNetworkHttpObserver_$Lambda$1_initWithNSString_withNSStringArray_(NSString *capture$0, IOSObjectArray *capture$1) {
  J2OBJC_CREATE_IMPL(RuKorincRuntimeNetworkHttpObserver_$Lambda$1, initWithNSString_withNSStringArray_, capture$0, capture$1)
}

@implementation RuKorincRuntimeNetworkHttpObserver_1

- (instancetype)initWithNSString:(NSString *)capture$0
    withRuKorincRuntimeRxEmitter:(id<RuKorincRuntimeRxEmitter>)capture$1 {
  RuKorincRuntimeNetworkHttpObserver_1_initWithNSString_withRuKorincRuntimeRxEmitter_(self, capture$0, capture$1);
  return self;
}

- (void)onResponceWithRuKorincRuntimeNetworkHttpResponse:(RuKorincRuntimeNetworkHttpResponse *)response {
  if ([((RuKorincRuntimeNetworkHttpResponse *) nil_chk(response)) getCode] / 100 == 2) {
    [((id<RuKorincRuntimeLoggingLogProvider>) nil_chk(JreLoadStatic(RuKorincRuntimeRuntimeConfiguration, log))) dWithNSString:@"HttpObserver" withNSString:JreStrcat("$$C$", @"res get: ", val$url_, ' ', [response getContent])];
    [((id<RuKorincRuntimeRxEmitter>) nil_chk(val$e_)) onNextWithId:response];
    [val$e_ onComplete];
  }
  else {
    JavaLangException *error = new_JavaLangException_initWithNSString_(JreStrcat("$$$I", @"URL: ", val$url_, @"\nHttp error code", [response getCode]));
    [((id<RuKorincRuntimeRxEmitter>) nil_chk(val$e_)) onErrorWithJavaLangThrowable:error];
    [((id<RuKorincRuntimeLoggingLogProvider>) nil_chk(JreLoadStatic(RuKorincRuntimeRuntimeConfiguration, log))) eWithJavaLangThrowable:error];
  }
}

- (void)onFailureWithJavaLangThrowable:(JavaLangThrowable *)throwable {
  [((id<RuKorincRuntimeLoggingLogProvider>) nil_chk(JreLoadStatic(RuKorincRuntimeRuntimeConfiguration, log))) eWithJavaLangThrowable:throwable];
  [((id<RuKorincRuntimeRxEmitter>) nil_chk(val$e_)) onErrorWithJavaLangThrowable:throwable];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withRuKorincRuntimeRxEmitter:);
  methods[1].selector = @selector(onResponceWithRuKorincRuntimeNetworkHttpResponse:);
  methods[2].selector = @selector(onFailureWithJavaLangThrowable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$url_", "LNSString;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$e_", "LRuKorincRuntimeRxEmitter;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "onResponce", "LRuKorincRuntimeNetworkHttpResponse;", "onFailure", "LJavaLangThrowable;", "Lru/korinc/runtime/rx/Emitter<Lru/korinc/runtime/network/HttpResponse;>;", "LRuKorincRuntimeNetworkHttpObserver;", "getWithNSString:withNSStringArray:" };
  static const J2ObjcClassInfo _RuKorincRuntimeNetworkHttpObserver_1 = { "", "ru.korinc.runtime.network", ptrTable, methods, fields, 7, 0x8018, 3, 2, 5, -1, 6, -1, -1 };
  return &_RuKorincRuntimeNetworkHttpObserver_1;
}

@end

void RuKorincRuntimeNetworkHttpObserver_1_initWithNSString_withRuKorincRuntimeRxEmitter_(RuKorincRuntimeNetworkHttpObserver_1 *self, NSString *capture$0, id<RuKorincRuntimeRxEmitter> capture$1) {
  self->val$url_ = capture$0;
  self->val$e_ = capture$1;
  RuKorincRuntimeNetworkHttpCallback_init(self);
}

RuKorincRuntimeNetworkHttpObserver_1 *new_RuKorincRuntimeNetworkHttpObserver_1_initWithNSString_withRuKorincRuntimeRxEmitter_(NSString *capture$0, id<RuKorincRuntimeRxEmitter> capture$1) {
  J2OBJC_NEW_IMPL(RuKorincRuntimeNetworkHttpObserver_1, initWithNSString_withRuKorincRuntimeRxEmitter_, capture$0, capture$1)
}

RuKorincRuntimeNetworkHttpObserver_1 *create_RuKorincRuntimeNetworkHttpObserver_1_initWithNSString_withRuKorincRuntimeRxEmitter_(NSString *capture$0, id<RuKorincRuntimeRxEmitter> capture$1) {
  J2OBJC_CREATE_IMPL(RuKorincRuntimeNetworkHttpObserver_1, initWithNSString_withRuKorincRuntimeRxEmitter_, capture$0, capture$1)
}

@implementation RuKorincRuntimeNetworkHttpObserver_$Lambda$3

- (id)applyWithId:(JavaLangThrowable *)t {
  return [((id<RuKorincRuntimeRxObservableWrapper>) nil_chk(val$throwableObservableWrapper_)) timerWithWindowMillis:500];
}

@end

void RuKorincRuntimeNetworkHttpObserver_$Lambda$3_initWithRuKorincRuntimeRxObservableWrapper_(RuKorincRuntimeNetworkHttpObserver_$Lambda$3 *self, id<RuKorincRuntimeRxObservableWrapper> capture$0) {
  self->val$throwableObservableWrapper_ = capture$0;
  NSObject_init(self);
}

RuKorincRuntimeNetworkHttpObserver_$Lambda$3 *new_RuKorincRuntimeNetworkHttpObserver_$Lambda$3_initWithRuKorincRuntimeRxObservableWrapper_(id<RuKorincRuntimeRxObservableWrapper> capture$0) {
  J2OBJC_NEW_IMPL(RuKorincRuntimeNetworkHttpObserver_$Lambda$3, initWithRuKorincRuntimeRxObservableWrapper_, capture$0)
}

RuKorincRuntimeNetworkHttpObserver_$Lambda$3 *create_RuKorincRuntimeNetworkHttpObserver_$Lambda$3_initWithRuKorincRuntimeRxObservableWrapper_(id<RuKorincRuntimeRxObservableWrapper> capture$0) {
  J2OBJC_CREATE_IMPL(RuKorincRuntimeNetworkHttpObserver_$Lambda$3, initWithRuKorincRuntimeRxObservableWrapper_, capture$0)
}

J2OBJC_INITIALIZED_DEFN(RuKorincRuntimeNetworkHttpObserver_$Lambda$2)

@implementation RuKorincRuntimeNetworkHttpObserver_$Lambda$2

- (id)applyWithId:(id<RuKorincRuntimeRxObservableWrapper>)throwableObservableWrapper {
  return [((id<RuKorincRuntimeRxObservableWrapper>) nil_chk(throwableObservableWrapper)) flatMapWithFunc:new_RuKorincRuntimeNetworkHttpObserver_$Lambda$3_initWithRuKorincRuntimeRxObservableWrapper_(throwableObservableWrapper)];
}

+ (void)initialize {
  if (self == [RuKorincRuntimeNetworkHttpObserver_$Lambda$2 class]) {
    RuKorincRuntimeNetworkHttpObserver_$Lambda$2_instance = new_RuKorincRuntimeNetworkHttpObserver_$Lambda$2_init();
    J2OBJC_SET_INITIALIZED(RuKorincRuntimeNetworkHttpObserver_$Lambda$2)
  }
}

@end

void RuKorincRuntimeNetworkHttpObserver_$Lambda$2_init(RuKorincRuntimeNetworkHttpObserver_$Lambda$2 *self) {
  NSObject_init(self);
}

RuKorincRuntimeNetworkHttpObserver_$Lambda$2 *new_RuKorincRuntimeNetworkHttpObserver_$Lambda$2_init() {
  J2OBJC_NEW_IMPL(RuKorincRuntimeNetworkHttpObserver_$Lambda$2, init)
}

RuKorincRuntimeNetworkHttpObserver_$Lambda$2 *create_RuKorincRuntimeNetworkHttpObserver_$Lambda$2_init() {
  J2OBJC_CREATE_IMPL(RuKorincRuntimeNetworkHttpObserver_$Lambda$2, init)
}

@implementation RuKorincRuntimeNetworkHttpObserver_$Lambda$4

- (void)subscribeWithRuKorincRuntimeRxEmitter:(id<RuKorincRuntimeRxEmitter>)e {
  @try {
    [((id<RuKorincRuntimeNetworkHttpExecutor>) nil_chk([((id<RuKorincRuntimeNetworkHttpProvider>) nil_chk(JreLoadStatic(RuKorincRuntimeRuntimeConfiguration, http))) getExecutor])) putMethodWithUrl:val$url_ WithContent:val$data_ WithHeaders:val$headers_ WithCallback:new_RuKorincRuntimeNetworkHttpObserver_2_initWithRuKorincRuntimeRxEmitter_withNSString_(e, val$url_)];
  }
  @catch (JavaLangException *ex) {
    [((id<RuKorincRuntimeLoggingLogProvider>) nil_chk(JreLoadStatic(RuKorincRuntimeRuntimeConfiguration, log))) eWithJavaLangThrowable:ex];
    [((id<RuKorincRuntimeRxEmitter>) nil_chk(e)) onErrorWithJavaLangThrowable:ex];
  }
}

@end

void RuKorincRuntimeNetworkHttpObserver_$Lambda$4_initWithNSString_withNSString_withNSStringArray_(RuKorincRuntimeNetworkHttpObserver_$Lambda$4 *self, NSString *capture$0, NSString *capture$1, IOSObjectArray *capture$2) {
  self->val$url_ = capture$0;
  self->val$data_ = capture$1;
  self->val$headers_ = capture$2;
  NSObject_init(self);
}

RuKorincRuntimeNetworkHttpObserver_$Lambda$4 *new_RuKorincRuntimeNetworkHttpObserver_$Lambda$4_initWithNSString_withNSString_withNSStringArray_(NSString *capture$0, NSString *capture$1, IOSObjectArray *capture$2) {
  J2OBJC_NEW_IMPL(RuKorincRuntimeNetworkHttpObserver_$Lambda$4, initWithNSString_withNSString_withNSStringArray_, capture$0, capture$1, capture$2)
}

RuKorincRuntimeNetworkHttpObserver_$Lambda$4 *create_RuKorincRuntimeNetworkHttpObserver_$Lambda$4_initWithNSString_withNSString_withNSStringArray_(NSString *capture$0, NSString *capture$1, IOSObjectArray *capture$2) {
  J2OBJC_CREATE_IMPL(RuKorincRuntimeNetworkHttpObserver_$Lambda$4, initWithNSString_withNSString_withNSStringArray_, capture$0, capture$1, capture$2)
}

@implementation RuKorincRuntimeNetworkHttpObserver_2

- (instancetype)initWithRuKorincRuntimeRxEmitter:(id<RuKorincRuntimeRxEmitter>)capture$0
                                    withNSString:(NSString *)capture$1 {
  RuKorincRuntimeNetworkHttpObserver_2_initWithRuKorincRuntimeRxEmitter_withNSString_(self, capture$0, capture$1);
  return self;
}

- (void)onResponceWithRuKorincRuntimeNetworkHttpResponse:(RuKorincRuntimeNetworkHttpResponse *)response {
  if ([((RuKorincRuntimeNetworkHttpResponse *) nil_chk(response)) getCode] / 100 == 2) {
    [((id<RuKorincRuntimeRxEmitter>) nil_chk(val$e_)) onNextWithId:response];
    [val$e_ onComplete];
  }
  else {
    [((id<RuKorincRuntimeRxEmitter>) nil_chk(val$e_)) onErrorWithJavaLangThrowable:new_JavaLangException_initWithNSString_(JreStrcat("$$$I", @"URL: ", val$url_, @"\nHttp error code", [response getCode]))];
  }
}

- (void)onFailureWithJavaLangThrowable:(JavaLangThrowable *)throwable {
  [((id<RuKorincRuntimeRxEmitter>) nil_chk(val$e_)) onErrorWithJavaLangThrowable:throwable];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRuKorincRuntimeRxEmitter:withNSString:);
  methods[1].selector = @selector(onResponceWithRuKorincRuntimeNetworkHttpResponse:);
  methods[2].selector = @selector(onFailureWithJavaLangThrowable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$e_", "LRuKorincRuntimeRxEmitter;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
    { "val$url_", "LNSString;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onResponce", "LRuKorincRuntimeNetworkHttpResponse;", "onFailure", "LJavaLangThrowable;", "Lru/korinc/runtime/rx/Emitter<Lru/korinc/runtime/network/HttpResponse;>;", "LRuKorincRuntimeNetworkHttpObserver;", "putWithNSString:withNSString:withNSStringArray:" };
  static const J2ObjcClassInfo _RuKorincRuntimeNetworkHttpObserver_2 = { "", "ru.korinc.runtime.network", ptrTable, methods, fields, 7, 0x8018, 3, 2, 5, -1, 6, -1, -1 };
  return &_RuKorincRuntimeNetworkHttpObserver_2;
}

@end

void RuKorincRuntimeNetworkHttpObserver_2_initWithRuKorincRuntimeRxEmitter_withNSString_(RuKorincRuntimeNetworkHttpObserver_2 *self, id<RuKorincRuntimeRxEmitter> capture$0, NSString *capture$1) {
  self->val$e_ = capture$0;
  self->val$url_ = capture$1;
  RuKorincRuntimeNetworkHttpCallback_init(self);
}

RuKorincRuntimeNetworkHttpObserver_2 *new_RuKorincRuntimeNetworkHttpObserver_2_initWithRuKorincRuntimeRxEmitter_withNSString_(id<RuKorincRuntimeRxEmitter> capture$0, NSString *capture$1) {
  J2OBJC_NEW_IMPL(RuKorincRuntimeNetworkHttpObserver_2, initWithRuKorincRuntimeRxEmitter_withNSString_, capture$0, capture$1)
}

RuKorincRuntimeNetworkHttpObserver_2 *create_RuKorincRuntimeNetworkHttpObserver_2_initWithRuKorincRuntimeRxEmitter_withNSString_(id<RuKorincRuntimeRxEmitter> capture$0, NSString *capture$1) {
  J2OBJC_CREATE_IMPL(RuKorincRuntimeNetworkHttpObserver_2, initWithRuKorincRuntimeRxEmitter_withNSString_, capture$0, capture$1)
}

J2OBJC_INITIALIZED_DEFN(RuKorincRuntimeNetworkHttpObserver_$Lambda$5)

@implementation RuKorincRuntimeNetworkHttpObserver_$Lambda$5

- (id)applyWithId:(id<RuKorincRuntimeRxObservableWrapper>)throwableObservableWrapper {
  return [((id<RuKorincRuntimeRxObservableWrapper>) nil_chk(throwableObservableWrapper)) delayWithWindowMillis:5000];
}

+ (void)initialize {
  if (self == [RuKorincRuntimeNetworkHttpObserver_$Lambda$5 class]) {
    RuKorincRuntimeNetworkHttpObserver_$Lambda$5_instance = new_RuKorincRuntimeNetworkHttpObserver_$Lambda$5_init();
    J2OBJC_SET_INITIALIZED(RuKorincRuntimeNetworkHttpObserver_$Lambda$5)
  }
}

@end

void RuKorincRuntimeNetworkHttpObserver_$Lambda$5_init(RuKorincRuntimeNetworkHttpObserver_$Lambda$5 *self) {
  NSObject_init(self);
}

RuKorincRuntimeNetworkHttpObserver_$Lambda$5 *new_RuKorincRuntimeNetworkHttpObserver_$Lambda$5_init() {
  J2OBJC_NEW_IMPL(RuKorincRuntimeNetworkHttpObserver_$Lambda$5, init)
}

RuKorincRuntimeNetworkHttpObserver_$Lambda$5 *create_RuKorincRuntimeNetworkHttpObserver_$Lambda$5_init() {
  J2OBJC_CREATE_IMPL(RuKorincRuntimeNetworkHttpObserver_$Lambda$5, init)
}
