//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../core/src/main/java/ru/korinc/runtime/RuntimeConfiguration.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RuntimeConfiguration")
#ifdef RESTRICT_RuntimeConfiguration
#define INCLUDE_ALL_RuntimeConfiguration 0
#else
#define INCLUDE_ALL_RuntimeConfiguration 1
#endif
#undef RESTRICT_RuntimeConfiguration

#if !defined (RuKorincRuntimeRuntimeConfiguration_) && (INCLUDE_ALL_RuntimeConfiguration || defined(INCLUDE_RuKorincRuntimeRuntimeConfiguration))
#define RuKorincRuntimeRuntimeConfiguration_

@protocol RuKorincRuntimeLoggingLogProvider;
@protocol RuKorincRuntimeRxRxProvider;
@protocol RuKorincRuntimeTimeoutTimeoutProvider;

@interface RuKorincRuntimeRuntimeConfiguration : NSObject

#pragma mark Public

- (instancetype)initWithRuKorincRuntimeRxRxProvider:(id<RuKorincRuntimeRxRxProvider>)rxProvider
          withRuKorincRuntimeTimeoutTimeoutProvider:(id<RuKorincRuntimeTimeoutTimeoutProvider>)timeoutProvider
              withRuKorincRuntimeLoggingLogProvider:(id<RuKorincRuntimeLoggingLogProvider>)logProvider;

- (id<RuKorincRuntimeLoggingLogProvider>)getLogProvider;

- (id<RuKorincRuntimeRxRxProvider>)getRxProvider;

- (id<RuKorincRuntimeTimeoutTimeoutProvider>)getTimeoutProvider;

@end

J2OBJC_EMPTY_STATIC_INIT(RuKorincRuntimeRuntimeConfiguration)

FOUNDATION_EXPORT void RuKorincRuntimeRuntimeConfiguration_initWithRuKorincRuntimeRxRxProvider_withRuKorincRuntimeTimeoutTimeoutProvider_withRuKorincRuntimeLoggingLogProvider_(RuKorincRuntimeRuntimeConfiguration *self, id<RuKorincRuntimeRxRxProvider> rxProvider, id<RuKorincRuntimeTimeoutTimeoutProvider> timeoutProvider, id<RuKorincRuntimeLoggingLogProvider> logProvider);

FOUNDATION_EXPORT RuKorincRuntimeRuntimeConfiguration *new_RuKorincRuntimeRuntimeConfiguration_initWithRuKorincRuntimeRxRxProvider_withRuKorincRuntimeTimeoutTimeoutProvider_withRuKorincRuntimeLoggingLogProvider_(id<RuKorincRuntimeRxRxProvider> rxProvider, id<RuKorincRuntimeTimeoutTimeoutProvider> timeoutProvider, id<RuKorincRuntimeLoggingLogProvider> logProvider) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RuKorincRuntimeRuntimeConfiguration *create_RuKorincRuntimeRuntimeConfiguration_initWithRuKorincRuntimeRxRxProvider_withRuKorincRuntimeTimeoutTimeoutProvider_withRuKorincRuntimeLoggingLogProvider_(id<RuKorincRuntimeRxRxProvider> rxProvider, id<RuKorincRuntimeTimeoutTimeoutProvider> timeoutProvider, id<RuKorincRuntimeLoggingLogProvider> logProvider);

J2OBJC_TYPE_LITERAL_HEADER(RuKorincRuntimeRuntimeConfiguration)

#endif

#pragma pop_macro("INCLUDE_ALL_RuntimeConfiguration")
