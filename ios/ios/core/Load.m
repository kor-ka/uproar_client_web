//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../core/src/main/java/ru/korinc/core/entity/Load.java
//

#include "J2ObjC_source.h"
#include "Load.h"
#include "Query.h"
#include "SearchEntity.h"

@interface RuKorincCoreEntityLoad () {
 @public
  RuKorincCoreEntityQuery *query_;
}

@end

J2OBJC_FIELD_SETTER(RuKorincCoreEntityLoad, query_, RuKorincCoreEntityQuery *)

@implementation RuKorincCoreEntityLoad

- (instancetype)initWithRuKorincCoreEntityQuery:(RuKorincCoreEntityQuery *)query {
  RuKorincCoreEntityLoad_initWithRuKorincCoreEntityQuery_(self, query);
  return self;
}

- (RuKorincCoreEntityQuery *)getQuery {
  return query_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LRuKorincCoreEntityQuery;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRuKorincCoreEntityQuery:);
  methods[1].selector = @selector(getQuery);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "query_", "LRuKorincCoreEntityQuery;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRuKorincCoreEntityQuery;" };
  static const J2ObjcClassInfo _RuKorincCoreEntityLoad = { "Load", "ru.korinc.core.entity", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_RuKorincCoreEntityLoad;
}

@end

void RuKorincCoreEntityLoad_initWithRuKorincCoreEntityQuery_(RuKorincCoreEntityLoad *self, RuKorincCoreEntityQuery *query) {
  RuKorincCoreEntitySearchEntity_init(self);
  self->query_ = query;
}

RuKorincCoreEntityLoad *new_RuKorincCoreEntityLoad_initWithRuKorincCoreEntityQuery_(RuKorincCoreEntityQuery *query) {
  J2OBJC_NEW_IMPL(RuKorincCoreEntityLoad, initWithRuKorincCoreEntityQuery_, query)
}

RuKorincCoreEntityLoad *create_RuKorincCoreEntityLoad_initWithRuKorincCoreEntityQuery_(RuKorincCoreEntityQuery *query) {
  J2OBJC_CREATE_IMPL(RuKorincCoreEntityLoad, initWithRuKorincCoreEntityQuery_, query)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RuKorincCoreEntityLoad)
