//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../core/src/main/java/ru/korinc/core/modules/ModuleBase.java
//

#include "J2ObjC_source.h"
#include "ModuleBase.h"
#include "ModulesContext.h"
#include "RuntimeConfiguration.h"
#include "RxProvider.h"

@implementation RuKorincCoreModulesModuleBase

- (instancetype)initWithRuKorincCoreModulesModulesContext:(RuKorincCoreModulesModulesContext *)context {
  RuKorincCoreModulesModuleBase_initWithRuKorincCoreModulesModulesContext_(self, context);
  return self;
}

- (RuKorincCoreModulesModulesContext *)getContext {
  return mContext_;
}

- (void)run {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LRuKorincCoreModulesModulesContext;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRuKorincCoreModulesModulesContext:);
  methods[1].selector = @selector(getContext);
  methods[2].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mContext_", "LRuKorincCoreModulesModulesContext;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "mRxProvider_", "LRuKorincRuntimeRxRxProvider;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRuKorincCoreModulesModulesContext;" };
  static const J2ObjcClassInfo _RuKorincCoreModulesModuleBase = { "ModuleBase", "ru.korinc.core.modules", ptrTable, methods, fields, 7, 0x401, 3, 2, -1, -1, -1, -1, -1 };
  return &_RuKorincCoreModulesModuleBase;
}

@end

void RuKorincCoreModulesModuleBase_initWithRuKorincCoreModulesModulesContext_(RuKorincCoreModulesModuleBase *self, RuKorincCoreModulesModulesContext *context) {
  NSObject_init(self);
  self->mContext_ = context;
  self->mRxProvider_ = [((RuKorincRuntimeRuntimeConfiguration *) nil_chk([((RuKorincCoreModulesModulesContext *) nil_chk([self getContext])) getRuntimeConfiguration])) getRxProvider];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RuKorincCoreModulesModuleBase)
