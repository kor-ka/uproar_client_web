//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../runtime/src/main/java/ru/korinc/runtime/rx/RxActor.java
//

#include "BackgroundSchedulerWrapper.h"
#include "Consumer.h"
#include "DisposableWrapper.h"
#include "J2ObjC_source.h"
#include "ObservableWrapper.h"
#include "PublishSubjectWrapper.h"
#include "RuntimeConfiguration.h"
#include "RxActor.h"
#include "RxProvider.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface RuKorincRuntimeRxRxActor () {
 @public
  RuKorincRuntimeRxRxActor_ActorRef *ref_;
}

@end

J2OBJC_FIELD_SETTER(RuKorincRuntimeRxRxActor, ref_, RuKorincRuntimeRxRxActor_ActorRef *)

@interface RuKorincRuntimeRxRxActor_ActorRef () {
 @public
  id<RuKorincRuntimeRxSubjectPublishSubjectWrapper> ref_;
}

@end

J2OBJC_FIELD_SETTER(RuKorincRuntimeRxRxActor_ActorRef, ref_, id<RuKorincRuntimeRxSubjectPublishSubjectWrapper>)

@interface RuKorincRuntimeRxRxActor_OnStart : NSObject

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RuKorincRuntimeRxRxActor_OnStart)

__attribute__((unused)) static void RuKorincRuntimeRxRxActor_OnStart_init(RuKorincRuntimeRxRxActor_OnStart *self);

__attribute__((unused)) static RuKorincRuntimeRxRxActor_OnStart *new_RuKorincRuntimeRxRxActor_OnStart_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RuKorincRuntimeRxRxActor_OnStart *create_RuKorincRuntimeRxRxActor_OnStart_init();

J2OBJC_TYPE_LITERAL_HEADER(RuKorincRuntimeRxRxActor_OnStart)

@interface RuKorincRuntimeRxRxActor_$Lambda$1 : NSObject < RuKorincRuntimeRxConsumer > {
 @public
  RuKorincRuntimeRxRxActor *this$0_;
}

- (void)acceptWithId:(id)o;

@end

J2OBJC_EMPTY_STATIC_INIT(RuKorincRuntimeRxRxActor_$Lambda$1)

__attribute__((unused)) static void RuKorincRuntimeRxRxActor_$Lambda$1_initWithRuKorincRuntimeRxRxActor_(RuKorincRuntimeRxRxActor_$Lambda$1 *self, RuKorincRuntimeRxRxActor *outer$);

__attribute__((unused)) static RuKorincRuntimeRxRxActor_$Lambda$1 *new_RuKorincRuntimeRxRxActor_$Lambda$1_initWithRuKorincRuntimeRxRxActor_(RuKorincRuntimeRxRxActor *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RuKorincRuntimeRxRxActor_$Lambda$1 *create_RuKorincRuntimeRxRxActor_$Lambda$1_initWithRuKorincRuntimeRxRxActor_(RuKorincRuntimeRxRxActor *outer$);

@implementation RuKorincRuntimeRxRxActor

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RuKorincRuntimeRxRxActor_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)fireStart {
  [((RuKorincRuntimeRxRxActor_ActorRef *) nil_chk([self getRef])) sendWithId:new_RuKorincRuntimeRxRxActor_OnStart_init()];
}

- (void)onStart {
}

- (void)onMessageWithId:(id)message {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (RuKorincRuntimeRxRxActor_ActorRef *)getRef {
  return ref_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x404, 0, 1, -1, -1, -1, -1 },
    { NULL, "LRuKorincRuntimeRxRxActor_ActorRef;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(fireStart);
  methods[2].selector = @selector(onStart);
  methods[3].selector = @selector(onMessageWithId:);
  methods[4].selector = @selector(getRef);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ref_", "LRuKorincRuntimeRxRxActor_ActorRef;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onMessage", "LNSObject;", "LRuKorincRuntimeRxRxActor_ActorRef;LRuKorincRuntimeRxRxActor_OnStart;" };
  static const J2ObjcClassInfo _RuKorincRuntimeRxRxActor = { "RxActor", "ru.korinc.runtime.rx", ptrTable, methods, fields, 7, 0x401, 5, 1, -1, 2, -1, -1, -1 };
  return &_RuKorincRuntimeRxRxActor;
}

@end

void RuKorincRuntimeRxRxActor_init(RuKorincRuntimeRxRxActor *self) {
  NSObject_init(self);
  self->ref_ = new_RuKorincRuntimeRxRxActor_ActorRef_init();
  (void) [((id<RuKorincRuntimeRxObservableWrapper>) nil_chk([((id<RuKorincRuntimeRxSubjectPublishSubjectWrapper>) nil_chk([self->ref_ getRef])) observeOnWithScheduler:[((id<RuKorincRuntimeRxRxProvider>) nil_chk(JreLoadStatic(RuKorincRuntimeRuntimeConfiguration, rxProvider))) scheduler]])) subscribeWithConsumer:new_RuKorincRuntimeRxRxActor_$Lambda$1_initWithRuKorincRuntimeRxRxActor_(self)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RuKorincRuntimeRxRxActor)

@implementation RuKorincRuntimeRxRxActor_ActorRef

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RuKorincRuntimeRxRxActor_ActorRef_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<RuKorincRuntimeRxSubjectPublishSubjectWrapper>)getRef {
  return ref_;
}

- (void)sendWithId:(id)message {
  [((id<RuKorincRuntimeRxSubjectPublishSubjectWrapper>) nil_chk(ref_)) onNextWithId:message];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRuKorincRuntimeRxSubjectPublishSubjectWrapper;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getRef);
  methods[2].selector = @selector(sendWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ref_", "LRuKorincRuntimeRxSubjectPublishSubjectWrapper;", .constantValue.asLong = 0, 0x2, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "()Lru/korinc/runtime/rx/subject/PublishSubjectWrapper<Ljava/lang/Object;>;", "send", "LNSObject;", "Lru/korinc/runtime/rx/subject/PublishSubjectWrapper<Ljava/lang/Object;>;", "LRuKorincRuntimeRxRxActor;" };
  static const J2ObjcClassInfo _RuKorincRuntimeRxRxActor_ActorRef = { "ActorRef", "ru.korinc.runtime.rx", ptrTable, methods, fields, 7, 0x9, 3, 1, 4, -1, -1, -1, -1 };
  return &_RuKorincRuntimeRxRxActor_ActorRef;
}

@end

void RuKorincRuntimeRxRxActor_ActorRef_init(RuKorincRuntimeRxRxActor_ActorRef *self) {
  NSObject_init(self);
  self->ref_ = [((id<RuKorincRuntimeRxRxProvider>) nil_chk(JreLoadStatic(RuKorincRuntimeRuntimeConfiguration, rxProvider))) ps];
}

RuKorincRuntimeRxRxActor_ActorRef *new_RuKorincRuntimeRxRxActor_ActorRef_init() {
  J2OBJC_NEW_IMPL(RuKorincRuntimeRxRxActor_ActorRef, init)
}

RuKorincRuntimeRxRxActor_ActorRef *create_RuKorincRuntimeRxRxActor_ActorRef_init() {
  J2OBJC_CREATE_IMPL(RuKorincRuntimeRxRxActor_ActorRef, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RuKorincRuntimeRxRxActor_ActorRef)

@implementation RuKorincRuntimeRxRxActor_OnStart

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RuKorincRuntimeRxRxActor_OnStart_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRuKorincRuntimeRxRxActor;" };
  static const J2ObjcClassInfo _RuKorincRuntimeRxRxActor_OnStart = { "OnStart", "ru.korinc.runtime.rx", ptrTable, methods, NULL, 7, 0xa, 1, 0, 0, -1, -1, -1, -1 };
  return &_RuKorincRuntimeRxRxActor_OnStart;
}

@end

void RuKorincRuntimeRxRxActor_OnStart_init(RuKorincRuntimeRxRxActor_OnStart *self) {
  NSObject_init(self);
}

RuKorincRuntimeRxRxActor_OnStart *new_RuKorincRuntimeRxRxActor_OnStart_init() {
  J2OBJC_NEW_IMPL(RuKorincRuntimeRxRxActor_OnStart, init)
}

RuKorincRuntimeRxRxActor_OnStart *create_RuKorincRuntimeRxRxActor_OnStart_init() {
  J2OBJC_CREATE_IMPL(RuKorincRuntimeRxRxActor_OnStart, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RuKorincRuntimeRxRxActor_OnStart)

@implementation RuKorincRuntimeRxRxActor_$Lambda$1

- (void)acceptWithId:(id)o {
  if ([o isKindOfClass:[RuKorincRuntimeRxRxActor_OnStart class]]) {
    [this$0_ onStart];
  }
  else {
    [this$0_ onMessageWithId:o];
  }
}

@end

void RuKorincRuntimeRxRxActor_$Lambda$1_initWithRuKorincRuntimeRxRxActor_(RuKorincRuntimeRxRxActor_$Lambda$1 *self, RuKorincRuntimeRxRxActor *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

RuKorincRuntimeRxRxActor_$Lambda$1 *new_RuKorincRuntimeRxRxActor_$Lambda$1_initWithRuKorincRuntimeRxRxActor_(RuKorincRuntimeRxRxActor *outer$) {
  J2OBJC_NEW_IMPL(RuKorincRuntimeRxRxActor_$Lambda$1, initWithRuKorincRuntimeRxRxActor_, outer$)
}

RuKorincRuntimeRxRxActor_$Lambda$1 *create_RuKorincRuntimeRxRxActor_$Lambda$1_initWithRuKorincRuntimeRxRxActor_(RuKorincRuntimeRxRxActor *outer$) {
  J2OBJC_CREATE_IMPL(RuKorincRuntimeRxRxActor_$Lambda$1, initWithRuKorincRuntimeRxRxActor_, outer$)
}
