//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../core/src/main/java/ru/korinc/Model.java
//

#include "BSWrapper.h"
#include "BackgroundSchedulerWrapper.h"
#include "Consumer.h"
#include "DisposableWrapper.h"
#include "Emitter.h"
#include "Function.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "LogProvider.h"
#include "Model.h"
#include "ObservableOnSubscribe.h"
#include "ObservableWrapper.h"
#include "RuntimeConfiguration.h"
#include "RxProvider.h"
#include "TimeoutProvider.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/Thread.h"

@interface RuKorincModel () {
 @public
  RuKorincRuntimeRuntimeConfiguration *configuration_;
  id<RuKorincRuntimeRxSubjectBSWrapper> displayCount_;
  id<RuKorincRuntimeRxSubjectBSWrapper> counter_;
  id<RuKorincRuntimeLoggingLogProvider> log_;
}

- (void)checkCountRep;

@end

J2OBJC_FIELD_SETTER(RuKorincModel, configuration_, RuKorincRuntimeRuntimeConfiguration *)
J2OBJC_FIELD_SETTER(RuKorincModel, displayCount_, id<RuKorincRuntimeRxSubjectBSWrapper>)
J2OBJC_FIELD_SETTER(RuKorincModel, counter_, id<RuKorincRuntimeRxSubjectBSWrapper>)
J2OBJC_FIELD_SETTER(RuKorincModel, log_, id<RuKorincRuntimeLoggingLogProvider>)

__attribute__((unused)) static void RuKorincModel_checkCountRep(RuKorincModel *self);

@interface RuKorincModel_1 : NSObject < RuKorincRuntimeRxFunction > {
 @public
  RuKorincModel *this$0_;
}

- (instancetype)initWithRuKorincModel:(RuKorincModel *)outer$;

- (NSString *)applyWithId:(JavaLangInteger *)integer;

@end

J2OBJC_EMPTY_STATIC_INIT(RuKorincModel_1)

__attribute__((unused)) static void RuKorincModel_1_initWithRuKorincModel_(RuKorincModel_1 *self, RuKorincModel *outer$);

__attribute__((unused)) static RuKorincModel_1 *new_RuKorincModel_1_initWithRuKorincModel_(RuKorincModel *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RuKorincModel_1 *create_RuKorincModel_1_initWithRuKorincModel_(RuKorincModel *outer$);

@interface RuKorincModel_2 : NSObject < RuKorincRuntimeRxFunction > {
 @public
  RuKorincModel *this$0_;
}

- (instancetype)initWithRuKorincModel:(RuKorincModel *)outer$;

- (id<RuKorincRuntimeRxObservableWrapper>)applyWithId:(NSString *)s;

@end

J2OBJC_EMPTY_STATIC_INIT(RuKorincModel_2)

__attribute__((unused)) static void RuKorincModel_2_initWithRuKorincModel_(RuKorincModel_2 *self, RuKorincModel *outer$);

__attribute__((unused)) static RuKorincModel_2 *new_RuKorincModel_2_initWithRuKorincModel_(RuKorincModel *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RuKorincModel_2 *create_RuKorincModel_2_initWithRuKorincModel_(RuKorincModel *outer$);

@interface RuKorincModel_3 : NSObject < RuKorincRuntimeRxObservableOnSubscribe > {
 @public
  RuKorincModel *this$0_;
  NSString *val$s_;
}

- (instancetype)initWithRuKorincModel:(RuKorincModel *)outer$
                         withNSString:(NSString *)capture$0;

- (void)subscribeWithRuKorincRuntimeRxEmitter:(id<RuKorincRuntimeRxEmitter>)e;

@end

J2OBJC_EMPTY_STATIC_INIT(RuKorincModel_3)

__attribute__((unused)) static void RuKorincModel_3_initWithRuKorincModel_withNSString_(RuKorincModel_3 *self, RuKorincModel *outer$, NSString *capture$0);

__attribute__((unused)) static RuKorincModel_3 *new_RuKorincModel_3_initWithRuKorincModel_withNSString_(RuKorincModel *outer$, NSString *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RuKorincModel_3 *create_RuKorincModel_3_initWithRuKorincModel_withNSString_(RuKorincModel *outer$, NSString *capture$0);

@interface RuKorincModel_4 : NSObject < RuKorincRuntimeRxConsumer > {
 @public
  RuKorincModel *this$0_;
  jint current_;
}

- (instancetype)initWithRuKorincModel:(RuKorincModel *)outer$;

- (void)acceptWithId:(JavaLangInteger *)integer;

@end

J2OBJC_EMPTY_STATIC_INIT(RuKorincModel_4)

__attribute__((unused)) static void RuKorincModel_4_initWithRuKorincModel_(RuKorincModel_4 *self, RuKorincModel *outer$);

__attribute__((unused)) static RuKorincModel_4 *new_RuKorincModel_4_initWithRuKorincModel_(RuKorincModel *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RuKorincModel_4 *create_RuKorincModel_4_initWithRuKorincModel_(RuKorincModel *outer$);

@interface RuKorincModel_5 : NSObject < RuKorincRuntimeRxObservableOnSubscribe > {
 @public
  RuKorincModel *this$0_;
  jint val$i_;
}

- (instancetype)initWithRuKorincModel:(RuKorincModel *)outer$
                              withInt:(jint)capture$0;

- (void)subscribeWithRuKorincRuntimeRxEmitter:(id<RuKorincRuntimeRxEmitter>)e;

@end

J2OBJC_EMPTY_STATIC_INIT(RuKorincModel_5)

__attribute__((unused)) static void RuKorincModel_5_initWithRuKorincModel_withInt_(RuKorincModel_5 *self, RuKorincModel *outer$, jint capture$0);

__attribute__((unused)) static RuKorincModel_5 *new_RuKorincModel_5_initWithRuKorincModel_withInt_(RuKorincModel *outer$, jint capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RuKorincModel_5 *create_RuKorincModel_5_initWithRuKorincModel_withInt_(RuKorincModel *outer$, jint capture$0);

@interface RuKorincModel_6 : NSObject < RuKorincRuntimeRxConsumer > {
 @public
  RuKorincModel *this$0_;
}

- (instancetype)initWithRuKorincModel:(RuKorincModel *)outer$;

- (void)acceptWithId:(JavaLangInteger *)integer;

@end

J2OBJC_EMPTY_STATIC_INIT(RuKorincModel_6)

__attribute__((unused)) static void RuKorincModel_6_initWithRuKorincModel_(RuKorincModel_6 *self, RuKorincModel *outer$);

__attribute__((unused)) static RuKorincModel_6 *new_RuKorincModel_6_initWithRuKorincModel_(RuKorincModel *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RuKorincModel_6 *create_RuKorincModel_6_initWithRuKorincModel_(RuKorincModel *outer$);

@implementation RuKorincModel

- (instancetype)initWithRuKorincRuntimeRuntimeConfiguration:(RuKorincRuntimeRuntimeConfiguration *)configuration {
  RuKorincModel_initWithRuKorincRuntimeRuntimeConfiguration_(self, configuration);
  return self;
}

- (id<RuKorincRuntimeRxObservableWrapper>)subscribeCount {
  RuKorincModel_checkCountRep(self);
  return [((id<RuKorincRuntimeRxObservableWrapper>) nil_chk([((id<RuKorincRuntimeRxSubjectBSWrapper>) nil_chk(displayCount_)) mapWithFunc:new_RuKorincModel_1_initWithRuKorincModel_(self)])) flatMapWithFunc:new_RuKorincModel_2_initWithRuKorincModel_(self)];
}

- (id<RuKorincRuntimeRxObservableWrapper>)getMultiplyEmitConverterWithNSString:(NSString *)s {
  return [((id<RuKorincRuntimeRxRxProvider>) nil_chk([((RuKorincRuntimeRuntimeConfiguration *) nil_chk(configuration_)) getRxProvider])) observableCreateWithSource:new_RuKorincModel_3_initWithRuKorincModel_withNSString_(self, s)];
}

- (void)checkCountRep {
  RuKorincModel_checkCountRep(self);
}

- (void)countWithInt:(jint)i {
  for (jint j = 0; j < 1; j++) {
    [self countInternalWithInt:i];
  }
}

- (void)countInternalWithInt:(jint)i {
  RuKorincModel_checkCountRep(self);
  (void) [((id<RuKorincRuntimeRxObservableWrapper>) nil_chk([((id<RuKorincRuntimeRxObservableWrapper>) nil_chk([((id<RuKorincRuntimeRxRxProvider>) nil_chk([((RuKorincRuntimeRuntimeConfiguration *) nil_chk(configuration_)) getRxProvider])) observableCreateWithSource:new_RuKorincModel_5_initWithRuKorincModel_withInt_(self, i)])) subscribeOnWithScheduler:[((id<RuKorincRuntimeRxRxProvider>) nil_chk([((RuKorincRuntimeRuntimeConfiguration *) nil_chk(configuration_)) getRxProvider])) scheduler]])) subscribeWithConsumer:new_RuKorincModel_6_initWithRuKorincModel_(self)];
}

- (NSString *)numberToWordsWithInt:(jint)number {
  if (number == 0) {
    return @"zero";
  }
  if (number < 0) {
    return JreStrcat("$$", @"minus ", [self numberToWordsWithInt:JavaLangMath_absWithInt_(number)]);
  }
  NSString *words = @"";
  if ((number / 1000000000) > 0) {
    (void) JreStrAppendStrong(&words, "$$", [self numberToWordsWithInt:number / 1000000000], @" billion ");
    number %= 1000000000;
  }
  if ((number / 1000000) > 0) {
    (void) JreStrAppendStrong(&words, "$$", [self numberToWordsWithInt:number / 1000000], @" million ");
    number %= 1000000;
  }
  if ((number / 1000) > 0) {
    (void) JreStrAppendStrong(&words, "$$", [self numberToWordsWithInt:number / 1000], @" thousand ");
    number %= 1000;
  }
  if ((number / 100) > 0) {
    (void) JreStrAppendStrong(&words, "$$", [self numberToWordsWithInt:number / 100], @" hundred ");
    number %= 100;
  }
  if (number > 0) {
    if (number < 20) {
      (void) JreStrAppendStrong(&words, "$", IOSObjectArray_Get(nil_chk(unitsMap_), number));
    }
    else {
      (void) JreStrAppendStrong(&words, "$", IOSObjectArray_Get(nil_chk(tensMap_), number / 10));
      if ((number % 10) > 0) {
        (void) JreStrAppendStrong(&words, "C$", '-', IOSObjectArray_Get(nil_chk(unitsMap_), number % 10));
      }
    }
  }
  return words;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LRuKorincRuntimeRxObservableWrapper;", 0x1, -1, -1, -1, 1, -1, -1 },
    { NULL, "LRuKorincRuntimeRxObservableWrapper;", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 8, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRuKorincRuntimeRuntimeConfiguration:);
  methods[1].selector = @selector(subscribeCount);
  methods[2].selector = @selector(getMultiplyEmitConverterWithNSString:);
  methods[3].selector = @selector(checkCountRep);
  methods[4].selector = @selector(countWithInt:);
  methods[5].selector = @selector(countInternalWithInt:);
  methods[6].selector = @selector(numberToWordsWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "configuration_", "LRuKorincRuntimeRuntimeConfiguration;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "displayCount_", "LRuKorincRuntimeRxSubjectBSWrapper;", .constantValue.asLong = 0, 0x2, -1, -1, 9, -1 },
    { "counter_", "LRuKorincRuntimeRxSubjectBSWrapper;", .constantValue.asLong = 0, 0x2, -1, -1, 9, -1 },
    { "log_", "LRuKorincRuntimeLoggingLogProvider;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "unitsMap_", "[LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "tensMap_", "[LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRuKorincRuntimeRuntimeConfiguration;", "()Lru/korinc/runtime/rx/ObservableWrapper<Ljava/lang/String;>;", "getMultiplyEmitConverter", "LNSString;", "(Ljava/lang/String;)Lru/korinc/runtime/rx/ObservableWrapper<Ljava/lang/String;>;", "count", "I", "countInternal", "numberToWords", "Lru/korinc/runtime/rx/subject/BSWrapper<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RuKorincModel = { "Model", "ru.korinc", ptrTable, methods, fields, 7, 0x1, 7, 6, -1, -1, -1, -1, -1 };
  return &_RuKorincModel;
}

@end

void RuKorincModel_initWithRuKorincRuntimeRuntimeConfiguration_(RuKorincModel *self, RuKorincRuntimeRuntimeConfiguration *configuration) {
  NSObject_init(self);
  self->unitsMap_ = [IOSObjectArray newArrayWithObjects:(id[]){ @"zero", @"one", @"two", @"three", @"four", @"five", @"six", @"seven", @"eight", @"nine", @"ten", @"eleven", @"twelve", @"thirteen", @"fourteen", @"fifteen", @"sixteen", @"seventeen", @"eighteen", @"nineteen" } count:20 type:NSString_class_()];
  self->tensMap_ = [IOSObjectArray newArrayWithObjects:(id[]){ @"zero", @"ten", @"twenty", @"thirty", @"forty", @"fifty", @"sixty", @"seventy", @"eighty", @"ninety" } count:10 type:NSString_class_()];
  self->configuration_ = configuration;
  self->log_ = [((RuKorincRuntimeRuntimeConfiguration *) nil_chk(configuration)) getLogProvider];
}

RuKorincModel *new_RuKorincModel_initWithRuKorincRuntimeRuntimeConfiguration_(RuKorincRuntimeRuntimeConfiguration *configuration) {
  J2OBJC_NEW_IMPL(RuKorincModel, initWithRuKorincRuntimeRuntimeConfiguration_, configuration)
}

RuKorincModel *create_RuKorincModel_initWithRuKorincRuntimeRuntimeConfiguration_(RuKorincRuntimeRuntimeConfiguration *configuration) {
  J2OBJC_CREATE_IMPL(RuKorincModel, initWithRuKorincRuntimeRuntimeConfiguration_, configuration)
}

void RuKorincModel_checkCountRep(RuKorincModel *self) {
  if (self->displayCount_ == nil) {
    self->displayCount_ = [((id<RuKorincRuntimeRxRxProvider>) nil_chk([((RuKorincRuntimeRuntimeConfiguration *) nil_chk(self->configuration_)) getRxProvider])) bsWithId:JavaLangInteger_valueOfWithInt_(0)];
    self->counter_ = [((id<RuKorincRuntimeRxRxProvider>) nil_chk([((RuKorincRuntimeRuntimeConfiguration *) nil_chk(self->configuration_)) getRxProvider])) bsWithId:JavaLangInteger_valueOfWithInt_(0)];
    (void) [((id<RuKorincRuntimeRxObservableWrapper>) nil_chk([((id<RuKorincRuntimeRxSubjectBSWrapper>) nil_chk(self->counter_)) observeOnWithScheduler:[((id<RuKorincRuntimeRxRxProvider>) nil_chk([((RuKorincRuntimeRuntimeConfiguration *) nil_chk(self->configuration_)) getRxProvider])) scheduler]])) subscribeWithConsumer:new_RuKorincModel_4_initWithRuKorincModel_(self)];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RuKorincModel)

@implementation RuKorincModel_1

- (instancetype)initWithRuKorincModel:(RuKorincModel *)outer$ {
  RuKorincModel_1_initWithRuKorincModel_(self, outer$);
  return self;
}

- (NSString *)applyWithId:(JavaLangInteger *)integer {
  return JreStrcat("@$$", integer, @" <--> ", [this$0_ numberToWordsWithInt:[((JavaLangInteger *) nil_chk(integer)) intValue]]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRuKorincModel:);
  methods[1].selector = @selector(applyWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRuKorincModel;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "apply", "LJavaLangInteger;", "LRuKorincModel;", "subscribeCount", "Ljava/lang/Object;Lru/korinc/runtime/rx/Function<Ljava/lang/Integer;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RuKorincModel_1 = { "", "ru.korinc", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, 4, -1 };
  return &_RuKorincModel_1;
}

@end

void RuKorincModel_1_initWithRuKorincModel_(RuKorincModel_1 *self, RuKorincModel *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

RuKorincModel_1 *new_RuKorincModel_1_initWithRuKorincModel_(RuKorincModel *outer$) {
  J2OBJC_NEW_IMPL(RuKorincModel_1, initWithRuKorincModel_, outer$)
}

RuKorincModel_1 *create_RuKorincModel_1_initWithRuKorincModel_(RuKorincModel *outer$) {
  J2OBJC_CREATE_IMPL(RuKorincModel_1, initWithRuKorincModel_, outer$)
}

@implementation RuKorincModel_2

- (instancetype)initWithRuKorincModel:(RuKorincModel *)outer$ {
  RuKorincModel_2_initWithRuKorincModel_(self, outer$);
  return self;
}

- (id<RuKorincRuntimeRxObservableWrapper>)applyWithId:(NSString *)s {
  return [this$0_ getMultiplyEmitConverterWithNSString:s];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRuKorincRuntimeRxObservableWrapper;", 0x1, 0, 1, 2, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRuKorincModel:);
  methods[1].selector = @selector(applyWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRuKorincModel;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "apply", "LNSString;", "LJavaLangException;", "(Ljava/lang/String;)Lru/korinc/runtime/rx/ObservableWrapper<Ljava/lang/String;>;", "LRuKorincModel;", "subscribeCount", "Ljava/lang/Object;Lru/korinc/runtime/rx/Function<Ljava/lang/String;Lru/korinc/runtime/rx/ObservableWrapper<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _RuKorincModel_2 = { "", "ru.korinc", ptrTable, methods, fields, 7, 0x8008, 2, 1, 4, -1, 5, 6, -1 };
  return &_RuKorincModel_2;
}

@end

void RuKorincModel_2_initWithRuKorincModel_(RuKorincModel_2 *self, RuKorincModel *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

RuKorincModel_2 *new_RuKorincModel_2_initWithRuKorincModel_(RuKorincModel *outer$) {
  J2OBJC_NEW_IMPL(RuKorincModel_2, initWithRuKorincModel_, outer$)
}

RuKorincModel_2 *create_RuKorincModel_2_initWithRuKorincModel_(RuKorincModel *outer$) {
  J2OBJC_CREATE_IMPL(RuKorincModel_2, initWithRuKorincModel_, outer$)
}

@implementation RuKorincModel_3

- (instancetype)initWithRuKorincModel:(RuKorincModel *)outer$
                         withNSString:(NSString *)capture$0 {
  RuKorincModel_3_initWithRuKorincModel_withNSString_(self, outer$, capture$0);
  return self;
}

- (void)subscribeWithRuKorincRuntimeRxEmitter:(id<RuKorincRuntimeRxEmitter>)e {
  [((id<RuKorincRuntimeRxEmitter>) nil_chk(e)) onNextWithId:JreStrcat("$$", val$s_, @": 1")];
  [((id<RuKorincRuntimeTimeoutTimeoutProvider>) nil_chk([((RuKorincRuntimeRuntimeConfiguration *) nil_chk(this$0_->configuration_)) getTimeoutProvider])) sleepWithInt:600];
  [e onNextWithId:JreStrcat("$$", val$s_, @": 2")];
  [((id<RuKorincRuntimeTimeoutTimeoutProvider>) nil_chk([((RuKorincRuntimeRuntimeConfiguration *) nil_chk(this$0_->configuration_)) getTimeoutProvider])) sleepWithInt:600];
  [e onNextWithId:JreStrcat("$$", val$s_, @": 3")];
  [((id<RuKorincRuntimeTimeoutTimeoutProvider>) nil_chk([((RuKorincRuntimeRuntimeConfiguration *) nil_chk(this$0_->configuration_)) getTimeoutProvider])) sleepWithInt:600];
  [e onComplete];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRuKorincModel:withNSString:);
  methods[1].selector = @selector(subscribeWithRuKorincRuntimeRxEmitter:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRuKorincModel;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$s_", "LNSString;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "subscribe", "LRuKorincRuntimeRxEmitter;", "LJavaLangException;", "(Lru/korinc/runtime/rx/Emitter<Ljava/lang/String;>;)V", "LRuKorincModel;", "getMultiplyEmitConverterWithNSString:", "Ljava/lang/Object;Lru/korinc/runtime/rx/ObservableOnSubscribe<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _RuKorincModel_3 = { "", "ru.korinc", ptrTable, methods, fields, 7, 0x8008, 2, 2, 4, -1, 5, 6, -1 };
  return &_RuKorincModel_3;
}

@end

void RuKorincModel_3_initWithRuKorincModel_withNSString_(RuKorincModel_3 *self, RuKorincModel *outer$, NSString *capture$0) {
  self->this$0_ = outer$;
  self->val$s_ = capture$0;
  NSObject_init(self);
}

RuKorincModel_3 *new_RuKorincModel_3_initWithRuKorincModel_withNSString_(RuKorincModel *outer$, NSString *capture$0) {
  J2OBJC_NEW_IMPL(RuKorincModel_3, initWithRuKorincModel_withNSString_, outer$, capture$0)
}

RuKorincModel_3 *create_RuKorincModel_3_initWithRuKorincModel_withNSString_(RuKorincModel *outer$, NSString *capture$0) {
  J2OBJC_CREATE_IMPL(RuKorincModel_3, initWithRuKorincModel_withNSString_, outer$, capture$0)
}

@implementation RuKorincModel_4

- (instancetype)initWithRuKorincModel:(RuKorincModel *)outer$ {
  RuKorincModel_4_initWithRuKorincModel_(self, outer$);
  return self;
}

- (void)acceptWithId:(JavaLangInteger *)integer {
  current_ += [((JavaLangInteger *) nil_chk(integer)) intValue];
  [((id<RuKorincRuntimeLoggingLogProvider>) nil_chk(this$0_->log_)) dWithNSString:@"Threading" withNSString:[((JavaLangThread *) nil_chk(JavaLangThread_currentThread())) description]];
  [((id<RuKorincRuntimeRxSubjectBSWrapper>) nil_chk(this$0_->displayCount_)) onNextWithId:JavaLangInteger_valueOfWithInt_(current_)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRuKorincModel:);
  methods[1].selector = @selector(acceptWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRuKorincModel;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "current_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "accept", "LJavaLangInteger;", "LJavaLangException;", "LRuKorincModel;", "checkCountRep", "Ljava/lang/Object;Lru/korinc/runtime/rx/Consumer<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RuKorincModel_4 = { "", "ru.korinc", ptrTable, methods, fields, 7, 0x8008, 2, 2, 3, -1, 4, 5, -1 };
  return &_RuKorincModel_4;
}

@end

void RuKorincModel_4_initWithRuKorincModel_(RuKorincModel_4 *self, RuKorincModel *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
  self->current_ = 0;
}

RuKorincModel_4 *new_RuKorincModel_4_initWithRuKorincModel_(RuKorincModel *outer$) {
  J2OBJC_NEW_IMPL(RuKorincModel_4, initWithRuKorincModel_, outer$)
}

RuKorincModel_4 *create_RuKorincModel_4_initWithRuKorincModel_(RuKorincModel *outer$) {
  J2OBJC_CREATE_IMPL(RuKorincModel_4, initWithRuKorincModel_, outer$)
}

@implementation RuKorincModel_5

- (instancetype)initWithRuKorincModel:(RuKorincModel *)outer$
                              withInt:(jint)capture$0 {
  RuKorincModel_5_initWithRuKorincModel_withInt_(self, outer$, capture$0);
  return self;
}

- (void)subscribeWithRuKorincRuntimeRxEmitter:(id<RuKorincRuntimeRxEmitter>)e {
  jint to1 = val$i_;
  while (to1-- > 0) {
    [((id<RuKorincRuntimeLoggingLogProvider>) nil_chk(this$0_->log_)) dWithNSString:@"wtf" withNSString:JreStrcat("I", to1)];
    [((id<RuKorincRuntimeRxEmitter>) nil_chk(e)) onNextWithId:JavaLangInteger_valueOfWithInt_(1)];
    [((id<RuKorincRuntimeTimeoutTimeoutProvider>) nil_chk([((RuKorincRuntimeRuntimeConfiguration *) nil_chk(this$0_->configuration_)) getTimeoutProvider])) sleepWithInt:500];
  }
  [((id<RuKorincRuntimeRxEmitter>) nil_chk(e)) onComplete];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRuKorincModel:withInt:);
  methods[1].selector = @selector(subscribeWithRuKorincRuntimeRxEmitter:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRuKorincModel;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$i_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "subscribe", "LRuKorincRuntimeRxEmitter;", "LJavaLangException;", "(Lru/korinc/runtime/rx/Emitter<Ljava/lang/Integer;>;)V", "LRuKorincModel;", "countInternalWithInt:", "Ljava/lang/Object;Lru/korinc/runtime/rx/ObservableOnSubscribe<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RuKorincModel_5 = { "", "ru.korinc", ptrTable, methods, fields, 7, 0x8008, 2, 2, 4, -1, 5, 6, -1 };
  return &_RuKorincModel_5;
}

@end

void RuKorincModel_5_initWithRuKorincModel_withInt_(RuKorincModel_5 *self, RuKorincModel *outer$, jint capture$0) {
  self->this$0_ = outer$;
  self->val$i_ = capture$0;
  NSObject_init(self);
}

RuKorincModel_5 *new_RuKorincModel_5_initWithRuKorincModel_withInt_(RuKorincModel *outer$, jint capture$0) {
  J2OBJC_NEW_IMPL(RuKorincModel_5, initWithRuKorincModel_withInt_, outer$, capture$0)
}

RuKorincModel_5 *create_RuKorincModel_5_initWithRuKorincModel_withInt_(RuKorincModel *outer$, jint capture$0) {
  J2OBJC_CREATE_IMPL(RuKorincModel_5, initWithRuKorincModel_withInt_, outer$, capture$0)
}

@implementation RuKorincModel_6

- (instancetype)initWithRuKorincModel:(RuKorincModel *)outer$ {
  RuKorincModel_6_initWithRuKorincModel_(self, outer$);
  return self;
}

- (void)acceptWithId:(JavaLangInteger *)integer {
  [((id<RuKorincRuntimeRxSubjectBSWrapper>) nil_chk(this$0_->counter_)) onNextWithId:integer];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRuKorincModel:);
  methods[1].selector = @selector(acceptWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRuKorincModel;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "accept", "LJavaLangInteger;", "LJavaLangException;", "LRuKorincModel;", "countInternalWithInt:", "Ljava/lang/Object;Lru/korinc/runtime/rx/Consumer<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _RuKorincModel_6 = { "", "ru.korinc", ptrTable, methods, fields, 7, 0x8008, 2, 1, 3, -1, 4, 5, -1 };
  return &_RuKorincModel_6;
}

@end

void RuKorincModel_6_initWithRuKorincModel_(RuKorincModel_6 *self, RuKorincModel *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

RuKorincModel_6 *new_RuKorincModel_6_initWithRuKorincModel_(RuKorincModel *outer$) {
  J2OBJC_NEW_IMPL(RuKorincModel_6, initWithRuKorincModel_, outer$)
}

RuKorincModel_6 *create_RuKorincModel_6_initWithRuKorincModel_(RuKorincModel *outer$) {
  J2OBJC_CREATE_IMPL(RuKorincModel_6, initWithRuKorincModel_, outer$)
}
