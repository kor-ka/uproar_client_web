//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../core/src/main/java/ru/korinc/core/Model.java
//

#include "J2ObjC_source.h"
#include "LogProvider.h"
#include "Model.h"
#include "ModulesContext.h"
#include "ObservableWrapper.h"
#include "Query.h"
#include "RuntimeConfiguration.h"
#include "SearchModule.h"

@interface RuKorincCoreModel () {
 @public
  RuKorincRuntimeRuntimeConfiguration *configuration_;
  RuKorincCoreModulesModulesContext *mModulesContext_;
}

@end

J2OBJC_FIELD_SETTER(RuKorincCoreModel, configuration_, RuKorincRuntimeRuntimeConfiguration *)
J2OBJC_FIELD_SETTER(RuKorincCoreModel, mModulesContext_, RuKorincCoreModulesModulesContext *)

@implementation RuKorincCoreModel

- (instancetype)initWithRuKorincRuntimeRuntimeConfiguration:(RuKorincRuntimeRuntimeConfiguration *)configuration {
  RuKorincCoreModel_initWithRuKorincRuntimeRuntimeConfiguration_(self, configuration);
  return self;
}

- (void)searchMovieByTitleQueryWithNSString:(NSString *)query {
  [((RuKorincCoreModulesSearchModule *) nil_chk([((RuKorincCoreModulesModulesContext *) nil_chk(mModulesContext_)) getSearchModule])) queryWithNSString:query];
}

- (void)searchMovieByTitleQueryWithRuKorincCoreEntityQuery:(RuKorincCoreEntityQuery *)query {
  [((RuKorincCoreModulesSearchModule *) nil_chk([((RuKorincCoreModulesModulesContext *) nil_chk(mModulesContext_)) getSearchModule])) queryWithRuKorincCoreEntityQuery:query];
}

- (id<RuKorincRuntimeRxObservableWrapper>)getSearchResults {
  return [((RuKorincCoreModulesSearchModule *) nil_chk([((RuKorincCoreModulesModulesContext *) nil_chk(mModulesContext_)) getSearchModule])) getSearchResults];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 3, -1, -1, -1, -1 },
    { NULL, "LRuKorincRuntimeRxObservableWrapper;", 0x1, -1, -1, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRuKorincRuntimeRuntimeConfiguration:);
  methods[1].selector = @selector(searchMovieByTitleQueryWithNSString:);
  methods[2].selector = @selector(searchMovieByTitleQueryWithRuKorincCoreEntityQuery:);
  methods[3].selector = @selector(getSearchResults);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "configuration_", "LRuKorincRuntimeRuntimeConfiguration;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mModulesContext_", "LRuKorincCoreModulesModulesContext;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRuKorincRuntimeRuntimeConfiguration;", "searchMovieByTitleQuery", "LNSString;", "LRuKorincCoreEntityQuery;", "()Lru/korinc/runtime/rx/ObservableWrapper<Lru/korinc/core/modules/QueryList;>;" };
  static const J2ObjcClassInfo _RuKorincCoreModel = { "Model", "ru.korinc.core", ptrTable, methods, fields, 7, 0x1, 4, 2, -1, -1, -1, -1, -1 };
  return &_RuKorincCoreModel;
}

@end

void RuKorincCoreModel_initWithRuKorincRuntimeRuntimeConfiguration_(RuKorincCoreModel *self, RuKorincRuntimeRuntimeConfiguration *configuration) {
  NSObject_init(self);
  self->configuration_ = configuration;
  self->mModulesContext_ = new_RuKorincCoreModulesModulesContext_initWithRuKorincRuntimeRuntimeConfiguration_(configuration);
  [((id<RuKorincRuntimeLoggingLogProvider>) nil_chk([((RuKorincRuntimeRuntimeConfiguration *) nil_chk(configuration)) getLog])) dWithNSString:@"Model" withNSString:@"inited"];
}

RuKorincCoreModel *new_RuKorincCoreModel_initWithRuKorincRuntimeRuntimeConfiguration_(RuKorincRuntimeRuntimeConfiguration *configuration) {
  J2OBJC_NEW_IMPL(RuKorincCoreModel, initWithRuKorincRuntimeRuntimeConfiguration_, configuration)
}

RuKorincCoreModel *create_RuKorincCoreModel_initWithRuKorincRuntimeRuntimeConfiguration_(RuKorincRuntimeRuntimeConfiguration *configuration) {
  J2OBJC_CREATE_IMPL(RuKorincCoreModel, initWithRuKorincRuntimeRuntimeConfiguration_, configuration)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RuKorincCoreModel)
